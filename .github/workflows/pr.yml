name: Pull request

on:
  pull_request:
    branches: main
    # paths:
      # - 'apps/**'
      # - 'sdks/**'
      # - '!sdks/java/**'

jobs:
  install-and-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.7

      - uses: ./.github/actions/setup-node-and-pnpm

      - name: Cache node modules
        uses: actions/cache@v4.0.2
        id: cache-node-modules
        with:
          key: node_modules-${{ hashFiles('pnpm-lock.yaml') }}
          path: |
            node_modules/
            apps/*/node_modules/
            sdks/*/node_modules/
      
      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: pnpm install --frozen-lockfile

      - name: Cache Builds
        uses: actions/cache@v4.0.2
        id: cache-builds
        with:
          key: cache-builds-${{ hashFiles('apps/**', 'sdks/**', '!sdks/java') }}
          path: |
            apps/client/build/
            apps/server/dist/
            sdks/*/lib/

      - name: Build apps
        if: steps.cache-builds.outputs.cache-hit != 'true'
        run: pnpm build

  unit: 
    runs-on: ubuntu-latest
    needs: install-and-build
    permissions:
      checks: write
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.7

      - uses: ./.github/actions/setup-node-and-pnpm

      - uses: ./.github/actions/restore-cache

      - name: Run unit tests
        run: pnpm test:ci

      - name: Test Report
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: |
            apps/*/junit.xml
            sdks/*/junit.xml