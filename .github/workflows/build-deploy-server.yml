name: Server build and deploy

on:
  push:
    branches:
      - main
    paths:
      - 'apps/server/**'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image_to_deploy: ${{ steps.get_image.outputs.image_to_deploy }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Log in to Azure
        uses: azure/login@v2.1.1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Docker login
        uses: azure/docker-login@v2
        with:
          login-server: etherealpulse.azurecr.io
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: Create docker image
        id: get_image
        uses: ./.github/actions/create-image
        with:
          app: server
      - name: Build and push Docker image
        run: |
          echo "IMAGE_TO_DEPLOY ${{ steps.get_image.outputs.image_to_deploy }}"
          cd apps/server
          docker build . -t ${{ steps.get_image.outputs.image_to_deploy }}
          docker push ${{ steps.get_image.outputs.image_to_deploy }}
          

  deploy:
    runs-on: ubuntu-latest
    needs: build
    env:
      TEST: ${{ needs.build.outputs.image_to_deploy }}
    steps:
      - name: Debug
        env:
          IMAGE_TO_DEPLOY: ${{ needs.build.outputs.image_to_deploy }}
        run: |
          echo "IMAGE_TO_DEPLOY ${{ needs.build.outputs.image_to_deploy }}"
          echo "IMAGE_TO_DEPLOY ENV $IMAGE_TO_DEPLOY"
          echo "TEST $TEST"
      - name: Build and deploy Container App
        uses: azure/container-apps-deploy-action@v2
        with:
          imageToDeploy: ${{ needs.build.outputs.image_to_deploy }}
          registryUsername: ${{ secrets.REGISTRY_USERNAME }}
          registryPassword: ${{ secrets.REGISTRY_PASSWORD }}
          containerAppName: ethereal-pulse-server
          containerAppEnvironment: container-apps-enviroment
          resourceGroup: RG-Ethereal-Pulse
          location: westeurope
          targetPort: ${{ secrets.MS_PORT }}
          ingress: external
          environmentVariables: PORT=secretref:port DATABASE_URI=secretref:database-uri CLOUD_PROVIDER_NAME=azure AZURE_CONNECTION_STRING=secretref:azure-connection-string
          disableTelemetry: true
